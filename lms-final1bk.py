import sysimport shutilimport osfrom datetime import datetimedef read_user_credentials(credentials):    credentials = {}    with open("/Users/apple/Desktop/Sherin/VIT/Mini Project- Libraray Managament/Users.txt", "r") as file:        for line in file:            username, password = line.strip().split(',')            credentials[username] = password    return credentialsdef login():    user_credentials = read_user_credentials("/Users/apple/Desktop/Sherin/VIT/Mini Project- Libraray Managament/Users.txt")    # Get username & password    print()    username = input("Enter your username: ")    password = input("Enter your password: ")    print()    # Check if the entered credentials are correct    if username in user_credentials and password == user_credentials[username]:        return (username)    else:        return 0    def load_books():    books = []    with open("/Users/apple/Desktop/Sherin/VIT/Mini Project- Libraray Managament/Bookshelf.txt", "r") as file:        for line in file:            book_info = line.strip().split("\t")            books.append(book_info)        #print(books)    file.close()    return booksdef save_books(books):    with open("/Users/apple/Desktop/Sherin/VIT/Mini Project- Libraray Managament/Bookshelf.txt", "r") as file:        for book in books:            file.write("\t".join(book) + "\n")    file.close()def main_page(books, username):        print()    print("1.List")    print("2.Lend")    print("3.Return")    print("4.Search")    print("5.Exit")    print()    choice = int(input("Enter your choice: "))        print()     if choice == 1:         listt()        main_page(books, username)    elif choice == 2:         lend(books, username)        main_page(books, username)    elif choice == 3:         returnn(books, username)        main_page(books, username)    elif choice == 4:         search_menu(books, username)    elif choice == 5:           print("Exiting program\n")        sys.exit()    else:           print("Invalid input choice\n")         def listt():    with open("/Users/apple/Desktop/Sherin/VIT/Mini Project- Libraray Managament/Bookshelf.txt", "r") as file:        Lines = file.readlines()        print(f"{'Title' : ^21}{'Author' : ^32}{'Published Date' : ^20}{'Is Available?' : ^15}")         count = 0                # Strips the newline character        for line in Lines:            count += 1            items = line.split(",")            print(count, f"{items[0] : <30}{items[1] : <22}{items[2] : ^20}{items[3] : ^10}")                         def lend(books, username):    dest = "/Users/apple/Desktop/Sherin/VIT/Mini Project- Libraray Managament/Bookshelf.txt"    src = "/Users/apple/Desktop/Sherin/VIT/Mini Project- Libraray Managament/Output.txt"        listt()    bk_no = int(input("\nEnter the book number to lend: "))        if (bk_no < 1):        print("\nInput Error: Book number below range!\n")        return;            fin = open(dest, "r")    fout = open(src, "w")            Lines = fin.readlines()    count = 0    bk_count = 0            # Read each line in the file    for line in Lines:        count += 1        book = line.strip().split(',')                if book[4] == username:            bk_count += 1                if count == bk_no:            if bk_count > 1:                print("\nYou have already borrowed 2 books. Please return & try again!\n")            else:                if book[3] == "Yes":                    book[3] = "No"                     book[4] = username                    print("\nBook is successfully borrowed!\n")                else:                    print("\nBook is already lent by an another user\n")                            book_str = "{},{},{},{},{}\n".format(*book)        fout.write(book_str)            if (bk_no > count):        print("\nInput Error: Book number exceeded range!\n")        return;                     fin.close()     fout.close()          #copy temp fie to source file    shutil.copy(src, dest)    #remove temp file    os.remove(src)                          def returnn(books, username):    #print("Calling return fucntion")    dest = "/Users/apple/Desktop/Sherin/VIT/Mini Project- Libraray Managament/Bookshelf.txt"    src = "/Users/apple/Desktop/Sherin/VIT/Mini Project- Libraray Managament/Output.txt"        listt()    bk_no = int(input("\nEnter the book number to be returned: "))        if (bk_no < 1):        print("\nInput Error: Book number below range!\n")        return;            fin = open(dest, "r")    fout = open(src, "w")            Lines = fin.readlines()    count = 0        # Read each line in the file    for line in Lines:        count += 1        book = line.strip().split(',')                 if count == bk_no:            if book[3] == "No" and book[4] != username:                print("\nThis book is borrowed by an another user\n")                            elif (book[3] == "No"  and book[4]== username):                book[3] = "Yes"                 book[4] = ""                print("\nBook is successfully returned!\n")            else:                print("\nYou have not borrowed book - {}\n", book[0])                        book_str = "{},{},{},{},{}\n".format(*book)        fout.write(book_str)                if (bk_no > count):        print("\nInput Error: Book number exceeded range!\n")        return;            fin.close()     fout.close()      shutil.copy(src, dest)     os.remove(src)            def search_menu(books, username):     print("\n1. Search by Title")    print("2. Search by Author")    print("3. Search between years")    print("4. Search Available Books")    print("5. Search for books borrowed by you")    print("6. Go to main menu")    print()    inp = int(input("\nEnter your search choice from above: "))        if inp == 1:        search_1()        search_menu(books, username)    elif inp == 2:         search_2()        search_menu(books, username)    elif inp == 3:         search_3()        search_menu(books, username)    elif inp == 4:         search_4()        search_menu(books, username)    elif inp == 5:        search_5(books, username)        search_menu(books, username)    elif inp == 6:        main_page(books, user)    else:        print("Enter a valid choice of search")         return    def search_1():         keyword = input("\nEnter the keyword to be searched for (amongst Title) : ")        file_path = "/Users/apple/Desktop/Sherin/VIT/Mini Project- Libraray Managament/Bookshelf.txt"    file = open(file_path,'r')        Lines = file.readlines()    count = 0        found = False  # Flag to track if keyword is found        print()    print(f"{'Title' : ^21}{'Author' : ^32}{'Published Date' : ^20}{'Is Available?' : ^15}")    for line in Lines:        count += 1        book = line.strip().split(',')        title_lower = book[0].lower()        keyword_lower = keyword.lower()        if keyword_lower in title_lower:            items = line.split(",")            print(f"{items[0] : <30}{items[1] : <22}{items[2] : ^20}{items[3] : ^10}")                        found = True  # Set flag to indicate keyword is found                if not found:        print("Keyword not found in the title column of file")        def search_2():         keyword = input("\nEnter the keyword to be searched for (amongst Author) : ")        file_path = "/Users/apple/Desktop/Sherin/VIT/Mini Project- Libraray Managament/Bookshelf.txt"    file = open(file_path,'r')        Lines = file.readlines()    count = 0        found = False  # Flag to track if keyword is found        print()    print(f"{'Title' : ^21}{'Author' : ^32}{'Published Date' : ^20}{'Is Available?' : ^15}")    for line in Lines:        count += 1        book = line.strip().split(',')        author_lower = book[1].lower()        keyword_lower = keyword.lower()        if keyword_lower in author_lower:            items = line.split(",")            print(f"{items[0] : <30}{items[1] : <22}{items[2] : ^20}{items[3] : ^10}")                        found = True  # Set flag to indicate keyword is found            #break    if not found:        print("Keyword not found in the author column of file")        def search_3():         yr1 = int(input("\nEnter the year from which you would like to serach: "))    yr2 = int(input("\nEnter the year till which you would like to serach: "))        file_path = "/Users/apple/Desktop/Sherin/VIT/Mini Project- Libraray Managament/Bookshelf.txt"    file = open(file_path,'r')        Lines = file.readlines()    count = 0        print()    print(f"{'Title' : ^21}{'Author' : ^32}{'Published Date' : ^20}{'Is Available?' : ^15}")        # Read each line in the file    for line in Lines:        count += 1        book = line.strip().split(',')                date_format = "%d/%m/%Y"            # Parse the input string to a datetime object        date = datetime.strptime(book[2], date_format)            # Extract and return the year        bk_yr =  date.year        #print(bk_yr)        flag = False        if yr1 <= bk_yr <= yr2 :            flag = True            items = line.split(",")            print(f"{items[0] : <30}{items[1] : <22}{items[2] : ^20}{items[3] : ^10}")                if not flag:        print("No books were published in this year gap!")                                    def search_4():        file_path = "/Users/apple/Desktop/Sherin/VIT/Mini Project- Libraray Managament/Bookshelf.txt"    file = open(file_path,'r')        Lines = file.readlines()    count = 0        print()    print(f"{'Title' : ^21}{'Author' : ^32}{'Published Date' : ^20}{'Is Available?' : ^15}")        # Read each line in the file    for line in Lines:        count += 1        book = line.strip().split(',')                if book[3] == "Yes":            items = line.split(",")            print(f"{items[0] : <30}{items[1] : <22}{items[2] : ^20}{items[3] : ^10}")            def search_5(books, username):    file_path = "/Users/apple/Desktop/Sherin/VIT/Mini Project- Libraray Managament/Bookshelf.txt"    file = open(file_path,'r')        Lines = file.readlines()    count = 0        print()    print(f"{'Title' : ^18}{'Author' : ^32}{'Published Date' : ^20}{'Is Available?' : ^15}{'User' : ^15}")        # Read each line in the file    for line in Lines:        count += 1        book = line.strip().split(',')                if book[4] == username:            items = line.split(",")            print(f"{items[0] : <30}{items[1] : <22}{items[2] : ^20}{items[3] : ^10}{items[4] : ^20}")                # main programuser = login()if (user == 0):     print("Invalid username or password. Access denied!\n")    else:    print("Login successful!")    books = load_books()    main_page(books,user)        